package controleur;
import java.util.concurrent.ThreadLocalRandom;

import calculette_code.Accumulateur;
import calculette_interface.GUI;

public class Controleur {
	
	GUI gui;
	Accumulateur accumulateur;
	int etatCalcul; //Variable = 0 si l'utilisateur entre le premier nombre du calcul, 1 si c'est le deuxième (après l'opération OK), 2 si les deux nombres sont entrés
	
	public Controleur(Accumulateur accu, GUI ihm) {
		gui = ihm;
		accumulateur = accu ;
		etatCalcul = 0;
	}
	
	public void actionsBoutons(GUI ihm, Accumulateur accu) {
		
		//action du bouton zéro
		ihm.getZero().setOnAction(e -> {
			if (etatCalcul==0) { //si on entre le premier nombre
				accu.setNombre(0); //pour l'accumulateur
				accu.setEntry(accu.accumuler("0"));
				ihm.getLabelp1().setText(accu.getEntry()); //pour l'ihm
			}
			else if (etatCalcul==1) { //si on entre le deuxième nombre
				accu.setNombre(0); //pour l'accumulateur
				accu.setEntry(accu.accumuler("0"));
				ihm.getLabelp2().setText(accu.getEntry()); //pour l'ihm
			}	
		});
		
		
		// de même pour les autres chiffres
		ihm.getUn().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(1);
				accu.setEntry(accu.accumuler("1"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(1);
				accu.setEntry(accu.accumuler("1"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getDeux().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(2);
				accu.setEntry(accu.accumuler("2"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(2);
				accu.setEntry(accu.accumuler("2"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getTrois().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(3);
				accu.setEntry(accu.accumuler("3"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(3);
				accu.setEntry(accu.accumuler("3"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getQuatre().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(4);
				accu.setEntry(accu.accumuler("4"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(4);
				accu.setEntry(accu.accumuler("4"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getCinq().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(5);
				accu.setEntry(accu.accumuler("5"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(5);
				accu.setEntry(accu.accumuler("5"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getSix().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(6);
				accu.setEntry(accu.accumuler("6"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(6);
				accu.setEntry(accu.accumuler("6"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getSept().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(7);
				accu.setEntry(accu.accumuler("7"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(7);
				accu.setEntry(accu.accumuler("7"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getHuit().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(8);
				accu.setEntry(accu.accumuler("8"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(8);
				accu.setEntry(accu.accumuler("8"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		ihm.getNeuf().setOnAction(e -> {
			if (etatCalcul==0) {
				accu.setNombre(9);
				accu.setEntry(accu.accumuler("9"));
				ihm.getLabelp1().setText(accu.getEntry());
			}
			else if (etatCalcul==1) {
				accu.setNombre(9);
				accu.setEntry(accu.accumuler("9"));
				ihm.getLabelp2().setText(accu.getEntry());
			}	
		});
		
		
		//action du bouton virgule
		ihm.getVirg().setOnAction(e -> {
			if (etatCalcul==0) {
				if (accu.getEntry() == "") { //si il n'y a pas de nombre avant la ",", on considère que c'est un 0
					accu.setNombre(0);
					accu.setEntry("0");
					ihm.getLabelp1().setText("0");
				}
				if (ihm.getLabelp1().getText().indexOf('.') != -1) { //on vérifie que l'utilisateur ne rentre pas un nombre à deux virgules dans le label 1
					ihm.getLabelerreur().setText("Une seule virgule, \n petit malin ! ;) "); //si c'est le cas on met une erreur
					accu.backspace();
					ihm.getLabelp1().setText(accu.getEntry()); //on efface la virgule en trop
				}
				else { //sinon on met la virgule
					accu.setEntry(accu.accumuler("."));
					ihm.getLabelp1().setText(accu.getEntry());
				}
				
			}
			else if (etatCalcul==1) { //idem pour le label 2
				if (accu.getEntry() == "") {
					accu.setNombre(0);
					accu.setEntry("0");
					ihm.getLabelp2().setText("0");
				}
				if (ihm.getLabelp2().getText().indexOf('.') != -1) {
					ihm.getLabelerreur().setText("Une seule virgule, \n petit malin ! ;) ");
					accu.backspace();
					ihm.getLabelp2().setText(accu.getEntry());
				}
				else {
					accu.setEntry(accu.accumuler("."));
					ihm.getLabelp2().setText(accu.getEntry());
				}
			}
		});
		
		//action du bouton OK 
		ihm.getEmpiler().setOnAction(e-> {
			ihm.getLabelerreur().setText(""); //par défaut quand on clique sur le bouton OK on nettoie les erreurs
			if (accu.getEntry() == "") { //test erreur : valider deux fois de suite
				ihm.getLabelerreur().setText("Valider une seule fois suffit !");
			}
			else if (etatCalcul==0) { //permet de push dans la pile
				accu.setNombre(accu.stringToDouble(accu.getEntry()));
				accu.push();
				accu.setEntry("");
				etatCalcul=1;
			}
			else if (etatCalcul==1) {
				accu.setNombre(accu.stringToDouble(accu.getEntry()));
				accu.push();
				accu.setEntry("");
				etatCalcul=2;
			}
		});
		
		ihm.getNettoyer().setOnAction(e-> {
			ihm.getLabelp1().setText("");
			ihm.getLabelp2().setText("");
			accu.reset();
			etatCalcul = 0;
		});
		
		//action du bouton +
		ihm.getAdd().setOnAction(e-> {
			//par défaut on réinitialise le style du label erreur
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000"); 
			if (etatCalcul==0 || etatCalcul==1) {
				ihm.getLabelerreur().setText("Erreur, vous devez d'abord \n entrer la deuxième valeur \n du calcul!");
			}
			else {
				accu.add(); //on additionne
				Double res = accu.drop(); //on stocke le résultat
				accu.setNombre(res); //on le met dans nombre pour ensuite pouvoir le ré-emplier (push)
				accu.push();
				String r = res.toString(); //on le transforme en string pour l'afficher dans l'ihm
				ihm.getLabelp1().setText(r); //on l'affiche sur le label de gauche
				ihm.getLabelp2().setText(""); //on nettoie le label de droite
				etatCalcul = 1; //le résultat de l'addition est réutilisé dans le calcul suivant
			}
		});
		
		//pareil que le bouton +
		ihm.getSous().setOnAction(e-> {
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000");
			if (etatCalcul==0 || etatCalcul==1) {
				ihm.getLabelerreur().setText("Erreur, vous devez d'abord \n entrer la deuxième valeur \n du calcul!");
			}
			else {
				accu.sub();
				Double res = accu.drop();
				accu.setNombre(res);
				accu.push();
				String r = res.toString();
				ihm.getLabelp1().setText(r);
				ihm.getLabelp2().setText("");
				etatCalcul = 1;
			}
		});
		
		//pareil que le bouton +
		ihm.getMult().setOnAction(e-> {
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000");
			if (etatCalcul==0 || etatCalcul==1) {
				ihm.getLabelerreur().setText("Erreur, vous devez d'abord \n entrer la deuxième valeur \n du calcul!");
			}
			else {
				accu.mult();
				Double res = accu.drop();
				accu.setNombre(res);
				accu.push();
				String r = res.toString();
				ihm.getLabelp1().setText(r);
				ihm.getLabelp2().setText("");
				etatCalcul = 1;
			}
		});
		
		//action du bouton /
		ihm.getDiv().setOnAction(e-> {
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000");
			if ( accu.stringToDouble(ihm.getLabelp2().getText()) == 0) { //erreur : division par 0 !
				ihm.getLabelerreur().setText("Voyons, tu ne peux pas \n diviser par zéro !!");
			}
			else if (etatCalcul==0 || etatCalcul==1) {
				ihm.getLabelerreur().setText("Erreur, vous devez d'abord \n entrer la deuxième valeur \n du calcul!");
			}
			else if (etatCalcul ==2){
				accu.div();
				Double res = accu.drop();
				accu.setNombre(res);
				accu.push();
				String r = res.toString();
				ihm.getLabelp1().setText(r);
				ihm.getLabelp2().setText("");
				etatCalcul = 1;
			}
			
		});
		
		
		//action du bouton +/- 
		ihm.getNeg().setOnAction(e-> {
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000");
			if (etatCalcul==0) {
				ihm.getLabelerreur().setText("Erreur, vous devez entrer \n un nombre pour le passer \n en négatif, puis valider.");
			}
			else if (etatCalcul==1){
				accu.neg();
				Double res = accu.drop();
				accu.setNombre(res);
				accu.push();
				String r = res.toString();
				ihm.getLabelp1().setText(r);
			}
			else if (etatCalcul == 2) {
				accu.neg();
				Double res = accu.drop();
				accu.setNombre(res);
				accu.push();
				String r = res.toString();
				ihm.getLabelp2().setText(r);
			}
		});
		
		//action du bouton échanger
		ihm.getEchanger().setOnAction(e-> {
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000");
			if (etatCalcul !=2) {
				ihm.getLabelerreur().setText("Erreur, vous devez entrer \n deux nombres pour les \n échanger! ");
			}
			else {
				accu.swap(); //pour l'accumulateur
				String s1 = ihm.getLabelp1().getText(); //pour l'ihm on échange le texte des deux labels
				String s2 = ihm.getLabelp2().getText();
				ihm.getLabelp1().setText(s2);
				ihm.getLabelp2().setText(s1);
			}
		});
		
		//bouton effacer
		ihm.getAnnuler().setOnAction(e-> {
			ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FF0000");
			if (etatCalcul ==0) {
				accu.backspace();
				String l = ihm.getLabelp1().getText(); //même code que le backspace mais pour l'ihm
				int n = l.length();
				if (n > 1) {
					String l2 = l.substring(0, n-1);
					ihm.getLabelp1().setText(l2);}
				else {
					String l2 = "";
					ihm.getLabelp1().setText(l2);
				}
			}
			else if (etatCalcul ==1) {
				accu.backspace();
				String l = ihm.getLabelp2().getText();
				int n = l.length();
				if (n > 1) {
					String l2 = l.substring(0, n-1);
					ihm.getLabelp2().setText(l2);}
				else {
					String l2 = "";
					ihm.getLabelp2().setText(l2);
				}	
			}
			else {
				ihm.getLabelerreur().setText("Vous ne pouvez plus \n modifier, déso"); //si on a déjà validé les deux nombres, on ne peut plus les modifier...
			}
		});
		
		//bouton licorne : surprise !
		ihm.getRandom().setOnAction(e-> {
			int n = ThreadLocalRandom.current().nextInt(0, 4); //création d'un nombre random entre 0 et 3
			switch (n) {
			case 0 :
				ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#FFC0CB");
				ihm.getLabelerreur().setText("Fais de beaux calculs, \n ma petite licorne <3");
				break;
			case 1 :
				ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#C541C5");
				ihm.getLabelerreur().setText("Bravo, vous venez de gagner \n un iPhoneX!");
				break;
			case 2 :
				ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill :#00CED1");
				ihm.getLabelerreur().setText("Eh vous avez vu? \n On a mis une licorne <3");
				break;
			case 3 :
				ihm.getLabelerreur().setStyle("-fx-pref-width: 160px; -fx-pref-height: 80px; -fx-font-size: 12 arial; -fx-text-fill : #32CD32");
				ihm.getLabelerreur().setText("Trop fatiguant de travailler... \n ZzzzZ");
				break;
			}
			
 		});
	}
	
		
	}
